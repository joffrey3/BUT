Créez  un répertoire cntr_r3.05, et pour chaque exercice
un sous-répertoire (Ex1, Ex2, etc.) pour y placer vos réponses.

Les exercices sont indépendants. 


Exercice I
----------

1) Ecrivez un programme gdf1.c qui implante le diagramme de processus
conforme à la sortie suivante de la commande ps :

F S   UID   PID  PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD
0 S  1000 29152 28785  0  80   0 -  1039 hrtime pts/0    00:00:00 a.out
1 S  1000 29154 29152  0  80   0 -  1039 hrtime pts/0    00:00:00  \_ a.out
1 S  1000 29158 29154  0  80   0 -  1039 hrtime pts/0    00:00:00  |   \_ a.out
1 S  1000 29160 29158  0  80   0 -  1039 hrtime pts/0    00:00:00  |   |   \_ a.out
1 S  1000 29159 29154  0  80   0 -  1039 hrtime pts/0    00:00:00  |   \_ a.out
1 S  1000 29156 29152  0  80   0 -  1039 hrtime pts/0    00:00:00  \_ a.out

2) Expliquez (dans gdf2.txt) ce que provoque  kill -TERM  29154.


3) Modifiez votre programme (gdf3.c) pour que le processus correspondant à 29156 utilise un
tube pour communiquer son PID au  processus correspondant à 29160.

Exercice II
-----------

Écrire en C une commande qui prend en argument un entier N et un nom de
fichier, et qui découpe le fichier en partie de N*512 octets.  Les  morceaux
de  taille  fixe  (N*512) seront écrits du fichier d’entrée vers part1, part2, etc. 

Comment avez-vous testé votre programme ?

Exercice III
------------

Le but est d'écrire un programme matrice.c qui "parallèlise" le calcul
du produit d'une matrice et  d'un vecteur.

Petit rappel : Pour une matrice (carrée) A et un vecteur X, B=A*X se calcule 
	A         X              B
[ 1 2 3 ]   [ 1 ]   [ 1*1 + 2*2 + 3*3 ]   [ 14 ]
[ 4 5 6 ] * [ 2 ] = [ 4*1 + 5*2 + 6*3 ] = [ 32 ]
[ 7 8 9 ]   [ 3 ]   [ 7*1 + 8*2 + 9*3 ]   [ 50 ]

Votre programme prendra sur la ligne de commande un entier N pour la dimension
de la matrice. Il créera une matrice entière aléatoire (coef entre -10 et 10) de dimension A[N][N+2]. Les deux
dernières colonnes serviront à stocker le vecteur X et le vecteur résultat
B.

Pour effectuer le calcul, le programme principal créera N fils, qui devront
calculer respectivement B[0], B[1], ..., B[N-1].

La communication entre le programme principal et les fils se fera au moyen de
tube(s). Chaque fils communiquera son résultat au père.

Le père, une fois tous les fils terminés, affichera le résultat.

Exemple d'exécution :

$ ./matrice 10
Resultat
 -7  -4   7   5   3   5  -4   2  -1  -9  -8  10
 -3   0   9  -7  -4 -10  -4   2   6   1  -2 -73
 -3  -1  -8   0  -8  -7  -3   5  -1  -8  -8  50
  8  -1  -3   3   6   1  -8  -1   3  -9   9 -19
 -6   7   8  -6   5   0   3  -4   1 -10   6 -62
  3  -8   0   6  -9  -5  -5  -6  -3   6  -5  -9
 -4  -1   3   7  -6   5  -8  -5   4  -3   4 -15
 -6  -7   0  -3  -2   6   8  -2  -6  -7   1 -15
  4   9   2 -10   6  -2   9   2  -4  -4   4 -96
  9   5   0   4   8  -3  -9   7  -8   7   2 -30

